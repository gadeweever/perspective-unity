using UnityEngine;
using System.Collections;

public class DistanceGenerator : MonoBehaviour {
	
	//Note positions Vector3: Actual rendered positions of notes on screen 
	public Vector3[] notePositions;
	//noteDifferences Vector2: Differences between each note in an xy plane
	// the differences are generated by chart data from a two dimensional plane
	// this is x,z in the game itself
	public Vector2[] noteDifferences;
	// originPosition Vector3: Beginning origin point of the song in the game spce
	private Vector3 originPosition;
	// nextNoteCalc int: next note to be calculated in note sequence
	//This note always corresponds to the end of a song sequence
	private int nextNoteCalc;
	//Phases int[]: List of blockSizes to generate
	// used to divide up loading times of notes, so that a list of notes doesn't have to be generated
	// Testing probably? Maybe better to generate, or generate based on events.
	public int[] phasePositions;
	public int nextPhaseCalc;
	// notenumber int: total amount of notes in a song
	public int noteNumber;
	
	//SetOrigin : sets the originPosition value
	public void SetOrigin(Vector3 newOrigin)
	{
		this.originPosition = newOrigin;
	}
	
	//CreateNotePositions (int) : Takes an int and generates the next notePositions values
	//of a number of that int. The nextNoteCalc variable is incremented to(current nextNoteCalc + BlockSize +1)
	// the next note position is then added to the notePositions array
	public void CreateNotePositions()
	{
		int blockSize = this.phasePositions[nextPhaseCalc];
		//int len = distances.Length;
		Vector3 currentPosition = this.originPosition;
		for(int i = 0 ; i < blockSize ;i++)
		{
			currentPosition.x += noteDifferences[nextNoteCalc].x;
			currentPosition.z += noteDifferences[nextNoteCalc].y;
			notePositions[nextNoteCalc] = new Vector3(currentPosition.x,currentPosition.y,currentPosition.z);
			this.nextNoteCalc++;
		}
		SetOrigin(currentPosition);
		this.nextPhaseCalc++;
	}
	
	//CreateNodeDifferences (float[],float[]) : Takes atomic x,y coordinate data and gereates the entire
	// 2D NoteDifferences arraylist.
	public void CreateNoteDifferences(float[] xvals, float[] yvals)
	{
		Debug.Log(yvals[0]);
		int len = xvals.Length;
		
		for(int i = 0; i < len; i++)
			this.noteDifferences[i] = new Vector2(xvals[i],yvals[i]);
	}
	
	
	
		
}
